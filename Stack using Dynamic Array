#include <iostream>
#include<climits>
using namespace std;
class StackUsingArray{
   int *data;
   int nextIndex;
   int capacity;
   public:
   StackUsingArray(int totalSize){
       data=new int[totalSize];
       nextIndex=0;
       capacity=totalSize;
   }
   int size(){
       return nextIndex;
   }
   bool IsEmpty(){
       return nextIndex==0;
   }
   int top(){
       return data[nextIndex-1];
   }
   void push(int element){
      if(nextIndex==capacity){
         int *newData=new int[2*capacity];
         for(int i=0;i<capacity;i++){
             newData[i]=data[i];
         }
         capacity*=2;
         delete [] data;
         data=newData;
      }
      data[nextIndex]=element;
      nextIndex++;
   }
   int pop(){
       if(IsEmpty()){
           cout<<"stack is empty"<<endl;
           return INT_MIN;
       }
       nextIndex--;
       return data[nextIndex];
   }
};
int main()
{
   StackUsingArray s(3);
   s.push(6);
   s.push(12);
   s.push(2);
   s.push(23);
   cout<<s.pop()<<endl;
   cout<<s.top()<<endl;
   cout<<s.size();
   s.push(44);
   cout<<s.size();
}
